class ImgJust{idealHeight=150;maxRowImgs=16;rowGap=0;columnGap=0;paddingLeft=0;paddingRight=0;paddingTop=0;paddingBottom=0;reload(){let t=this.container;getComputedStyle(t);let e=this.imgs,s=t.getBoundingClientRect().width-this.paddingLeft-this.paddingRight;if(s<=0)throw"ImgJust Error: No room for images. Client width is too small.";let i=[];for(var a=0;a<e.length;a++)i.push(e[a].naturalWidth*this.idealHeight/e[a].naturalHeight);let n=[],o=[];for(var r=new Map,l=new Map,g=-this.columnGap,h=0;h<e.length&&h<this.maxRowImgs;h++){g+=i[h]+this.columnGap;let d=g-s;r.set(h,d*d),l.set(h,0)}n.push(r),o.push(l);for(var p=1;p<e.length;p++){r=new Map,l=new Map;for(var h=p;h<e.length&&h<p+this.maxRowImgs;h++){g=i[h];let m=g-s;for(var f=m*m+n[p-1].get(h-1),u=h,c=h-1;c>=p;c--){g+=i[c]+this.columnGap;let w=g-s,y=w*w+n[p-1].get(c-1);y<f&&(f=y,u=c)}r.set(h,f),l.set(h,u)}n.push(r),o.push(l)}var p=n.length-this.maxRowImgs;p<0&&(p=0);var $=p,f=n[p].get(e.length-1);for(p++;p<n.length;p++){let x=n[p].get(e.length-1);x<f&&(f=x,$=p)}for(var v=[],_=e.length,p=$;p>=0;p--){let R=_-1,I=o[p].get(R);v.unshift({start:I,end:R}),_=I}for(var G of v){for(var B=0,a=G.start;a<=G.end;a++)B+=i[a],e[a].style.marginBottom=this.rowGap+"px";let L=s-(G.end-G.start)*this.columnGap,H=Math.round(this.idealHeight*L/B);for(var J=0,a=G.start;a<G.end;a++){let E=Math.round(i[a]*L/B);J+=E+this.columnGap,e[a].style.width=E+"px",e[a].style.height=H+"px",e[a].style.marginRight=this.columnGap+"px"}e[G.end].style.width=s-J+"px",e[G.end].style.height=H+"px",e[G.end].style.marginRight="0",e[G.end].classList.add("end")}let T=v[v.length-1];for(var a=T.start;a<=T.end;a++)e[a].style.marginBottom="0",e[a].classList.add("last");for(let C of e)C.style.display="block"}addImages(t){for(let e of t)e.style.display="none",this.imgs.push(e)}constructor(t,e=[],s={}){for(var[i,a]of Object.entries(s))this[i]=a;if(!t)throw"ImgJust Error: missing first argument in constructor: container";if(!e)throw"ImgJust Error: missing second argument in constructor: imgs";this.container=t,this.imgs=[],t.style.display="flex",t.style.flexFlow="row wrap",t.style.paddingTop=this.paddingTop+"px",t.style.paddingBottom=this.paddingBottom+"px",t.style.paddingLeft=this.paddingLeft+"px",t.style.paddingRight=this.paddingRight+"px",this.addImages(e),this.reload(),addEventListener("resize",t=>this.reload())}}